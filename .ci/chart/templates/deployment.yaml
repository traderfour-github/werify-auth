apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    group: auth-service
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}
      labels:
        app: {{ .Values.name }}
    spec:
      imagePullSecrets:
      - name: ghcr
      initContainers:
      - name: init-main
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              php artisan migrate --force --no-interaction
        env:
        - name: "APP_ENV"
          value: "local"
        - name: "DB_CONNECTION"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-connection
        - name: "DB_HOST"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-host
        - name: "DB_PORT"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-port
        - name: "DB_USERNAME"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-user
        - name: "DB_PASSWORD"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-password
        - name: "DB_DATABASE"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-name
        envFrom:
        - configMapRef:
            name: "{{ .Values.name }}"
      containers:
      - name: main
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: "APP_ENV"
          value: "production"
        - name: "DB_CONNECTION"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-connection
        - name: "DB_HOST"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-host
        - name: "DB_PORT"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-port
        - name: "DB_USERNAME"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-user
        - name: "DB_PASSWORD"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-password
        - name: "DB_DATABASE"
          valueFrom:
           secretKeyRef:
             name: "{{ .Values.name }}"
             key: db-name
        envFrom:
        - configMapRef:
            name: "{{ .Values.name }}"
        ports:
        - containerPort: 80
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 8 }}
        {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}